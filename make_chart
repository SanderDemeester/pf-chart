#!/bin/sh
function addcolomn(){
    if [ -x $1 ]; then
	echo -e "['DATA_POINT', VALUE],"
    else
	echo -e "['DATA_POINT', VALUE]"
    fi
}

contentheaderflag=yes
divid=0
filename=NULL

DATAFILE=voorbeeld-parsedfileformat/test1  #de dataset waaruit we de data moeten halen om te werken
DATAFILE_RECORDS=$(cat $DATAFILE |wc -l) # aantal records in de datafile
counter=0 #de counter om in de loop bij te houden hoeveel er al is geloopt
longopts="no-content-header,div-id,file:"
shortopt="nd:f:"
ARGUMENTS=$(getopt -s bash --options $shortopt --longoptions $longopts -- "$@")
eval set -- $ARGUMENTS
while true ; do
    case $1 in
	-n|--no-content-header) contentheaderflag=no; shift;;
	-d|--div-id) shift; divid="$1"; shift;;
	-f|--file) shift; filename="$1"; shift;;
	--) shift; break;;
	*) shift; break;;
    esac
done
echo $contentheaderflag
echo $divid
echo $filename

if [ $contentheaderflag == "yes" ]; then
    echo Content-type: text/html
    echo ""
fi

LOADSCRIPT_PT1=script1.js
LOADSCRIPT_PT2=script2.js
breedte=700
hoogte=600
title="IP Data-usage"
/bin/cat <<EOF
<html>
<head>
<title>Data visualisatie</title>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
EOF
cat $LOADSCRIPT_PT1
for i in $(cat $DATAFILE); do

    counter=$((counter+1))
   ipadr=$(echo $i |sed 's/^\([^:]*\):/\1/')
   value=$( echo $i |sed 's/^[^:]*:\([0-9]*\)$/\1/')
   if [ $counter -ne $DATAFILE_RECORDS ]; then
       addcolomn   |sed -e "s/DATA_POINT/$ipadr/;s/VALUE/$value/"
   else
       addcolomn A |sed -e "s/DATA_POINT/$ipadr/;s/VALUE/$value/" 
   fi
done

cat $LOADSCRIPT_PT2 |sed -e "s/title_replace/$title/;\
s/breedte_replace/$breedte/;\
s/hoogte_replace/$hoogte/;\
s/ID_NUMBER/$divid/"

/bin/cat <<EOF
</script>
</head>
<body>
<div id="chart_div_$divid"></div>
</body>
</html>
EOF
